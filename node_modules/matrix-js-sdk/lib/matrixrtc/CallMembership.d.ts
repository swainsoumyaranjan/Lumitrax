import { MatrixEvent } from "../matrix";
import { Focus } from "./focus";
type CallScope = "m.room" | "m.user";
export interface CallMembershipData {
    application?: string;
    call_id: string;
    scope: CallScope;
    device_id: string;
    created_ts?: number;
    expires: number;
    foci_active?: Focus[];
    membershipID: string;
}
export declare class CallMembership {
    private parentEvent;
    private data;
    static equal(a: CallMembership, b: CallMembership): boolean;
    constructor(parentEvent: MatrixEvent, data: CallMembershipData);
    get sender(): string | undefined;
    get callId(): string;
    get deviceId(): string;
    get application(): string | undefined;
    get scope(): CallScope;
    get membershipID(): string;
    createdTs(): number;
    getAbsoluteExpiry(): number;
    getLocalExpiry(): number;
    getMsUntilExpiry(): number;
    isExpired(): boolean;
    getActiveFoci(): Focus[];
}
export {};
//# sourceMappingURL=CallMembership.d.ts.map