{"version":3,"file":"register.js","names":["_error","require","_httpApi","_logger","doRegistration","registrationEndpoint","clientMetadata","metadata","client_name","clientName","client_uri","clientUri","response_types","grant_types","redirect_uris","redirectUris","id_token_signed_response_alg","token_endpoint_auth_method","application_type","headers","response","fetch","method","Method","Post","body","JSON","stringify","status","Error","OidcError","DynamicRegistrationFailed","json","clientId","DynamicRegistrationInvalid","error","Object","values","includes","message","logger","registerOidcClient","delegatedAuthConfig","baseUrl","DynamicRegistrationNotSupported","exports"],"sources":["../../src/oidc/register.ts"],"sourcesContent":["/*\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { IDelegatedAuthConfig } from \"../client\";\nimport { OidcError } from \"./error\";\nimport { Method } from \"../http-api\";\nimport { logger } from \"../logger\";\nimport { ValidatedIssuerConfig } from \"./validate\";\n\n/**\n * Client metadata passed to registration endpoint\n */\nexport type OidcRegistrationClientMetadata = {\n    clientName: string;\n    clientUri: string;\n    redirectUris: string[];\n};\n\n/**\n * Make the client registration request\n * @param registrationEndpoint - URL as returned from issuer ./well-known/openid-configuration\n * @param clientMetadata - registration metadata\n * @returns resolves to the registered client id when registration is successful\n * @throws An `Error` with `message` set to an entry in {@link OidcError},\n *      when the registration request fails, or the response is invalid.\n */\nconst doRegistration = async (\n    registrationEndpoint: string,\n    clientMetadata: OidcRegistrationClientMetadata,\n): Promise<string> => {\n    // https://openid.net/specs/openid-connect-registration-1_0.html\n    const metadata = {\n        client_name: clientMetadata.clientName,\n        client_uri: clientMetadata.clientUri,\n        response_types: [\"code\"],\n        grant_types: [\"authorization_code\", \"refresh_token\"],\n        redirect_uris: clientMetadata.redirectUris,\n        id_token_signed_response_alg: \"RS256\",\n        token_endpoint_auth_method: \"none\",\n        application_type: \"web\",\n    };\n    const headers = {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n    };\n\n    try {\n        const response = await fetch(registrationEndpoint, {\n            method: Method.Post,\n            headers,\n            body: JSON.stringify(metadata),\n        });\n\n        if (response.status >= 400) {\n            throw new Error(OidcError.DynamicRegistrationFailed);\n        }\n\n        const body = await response.json();\n        const clientId = body[\"client_id\"];\n        if (!clientId || typeof clientId !== \"string\") {\n            throw new Error(OidcError.DynamicRegistrationInvalid);\n        }\n\n        return clientId;\n    } catch (error) {\n        if (Object.values(OidcError).includes((error as Error).message as OidcError)) {\n            throw error;\n        } else {\n            logger.error(\"Dynamic registration request failed\", error);\n            throw new Error(OidcError.DynamicRegistrationFailed);\n        }\n    }\n};\n\n/**\n * Attempts dynamic registration against the configured registration endpoint\n * @param delegatedAuthConfig - Auth config from ValidatedServerConfig\n * @param clientName - Client name to register with the OP, eg 'Element'\n * @param baseUrl - URL of the home page of the Client, eg 'https://app.element.io/'\n * @returns Promise<string> resolved with registered clientId\n * @throws when registration is not supported, on failed request or invalid response\n */\nexport const registerOidcClient = async (\n    delegatedAuthConfig: IDelegatedAuthConfig & ValidatedIssuerConfig,\n    clientName: string,\n    baseUrl: string,\n): Promise<string> => {\n    const clientMetadata = {\n        clientName,\n        clientUri: baseUrl,\n        redirectUris: [baseUrl],\n    };\n    if (!delegatedAuthConfig.registrationEndpoint) {\n        throw new Error(OidcError.DynamicRegistrationNotSupported);\n    }\n    const clientId = await doRegistration(delegatedAuthConfig.registrationEndpoint, clientMetadata);\n\n    return clientId;\n};\n"],"mappings":";;;;;;AAiBA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,cAAc,GAAG,MAAAA,CACnBC,oBAA4B,EAC5BC,cAA8C,KAC5B;EAClB;EACA,MAAMC,QAAQ,GAAG;IACbC,WAAW,EAAEF,cAAc,CAACG,UAAU;IACtCC,UAAU,EAAEJ,cAAc,CAACK,SAAS;IACpCC,cAAc,EAAE,CAAC,MAAM,CAAC;IACxBC,WAAW,EAAE,CAAC,oBAAoB,EAAE,eAAe,CAAC;IACpDC,aAAa,EAAER,cAAc,CAACS,YAAY;IAC1CC,4BAA4B,EAAE,OAAO;IACrCC,0BAA0B,EAAE,MAAM;IAClCC,gBAAgB,EAAE;EACtB,CAAC;EACD,MAAMC,OAAO,GAAG;IACZ,QAAQ,EAAE,kBAAkB;IAC5B,cAAc,EAAE;EACpB,CAAC;EAED,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAChB,oBAAoB,EAAE;MAC/CiB,MAAM,EAAEC,eAAM,CAACC,IAAI;MACnBL,OAAO;MACPM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACpB,QAAQ;IACjC,CAAC,CAAC;IAEF,IAAIa,QAAQ,CAACQ,MAAM,IAAI,GAAG,EAAE;MACxB,MAAM,IAAIC,KAAK,CAACC,gBAAS,CAACC,yBAAyB,CAAC;IACxD;IAEA,MAAMN,IAAI,GAAG,MAAML,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC,MAAMC,QAAQ,GAAGR,IAAI,CAAC,WAAW,CAAC;IAClC,IAAI,CAACQ,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;MAC3C,MAAM,IAAIJ,KAAK,CAACC,gBAAS,CAACI,0BAA0B,CAAC;IACzD;IAEA,OAAOD,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,IAAIC,MAAM,CAACC,MAAM,CAACP,gBAAS,CAAC,CAACQ,QAAQ,CAAEH,KAAK,CAAWI,OAAoB,CAAC,EAAE;MAC1E,MAAMJ,KAAK;IACf,CAAC,MAAM;MACHK,cAAM,CAACL,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC1D,MAAM,IAAIN,KAAK,CAACC,gBAAS,CAACC,yBAAyB,CAAC;IACxD;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMU,kBAAkB,GAAG,MAAAA,CAC9BC,mBAAiE,EACjEjC,UAAkB,EAClBkC,OAAe,KACG;EAClB,MAAMrC,cAAc,GAAG;IACnBG,UAAU;IACVE,SAAS,EAAEgC,OAAO;IAClB5B,YAAY,EAAE,CAAC4B,OAAO;EAC1B,CAAC;EACD,IAAI,CAACD,mBAAmB,CAACrC,oBAAoB,EAAE;IAC3C,MAAM,IAAIwB,KAAK,CAACC,gBAAS,CAACc,+BAA+B,CAAC;EAC9D;EACA,MAAMX,QAAQ,GAAG,MAAM7B,cAAc,CAACsC,mBAAmB,CAACrC,oBAAoB,EAAEC,cAAc,CAAC;EAE/F,OAAO2B,QAAQ;AACnB,CAAC;AAACY,OAAA,CAAAJ,kBAAA,GAAAA,kBAAA"}