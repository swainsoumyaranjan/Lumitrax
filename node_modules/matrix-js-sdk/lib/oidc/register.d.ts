import { IDelegatedAuthConfig } from "../client";
import { ValidatedIssuerConfig } from "./validate";
/**
 * Client metadata passed to registration endpoint
 */
export type OidcRegistrationClientMetadata = {
    clientName: string;
    clientUri: string;
    redirectUris: string[];
};
/**
 * Attempts dynamic registration against the configured registration endpoint
 * @param delegatedAuthConfig - Auth config from ValidatedServerConfig
 * @param clientName - Client name to register with the OP, eg 'Element'
 * @param baseUrl - URL of the home page of the Client, eg 'https://app.element.io/'
 * @returns Promise<string> resolved with registered clientId
 * @throws when registration is not supported, on failed request or invalid response
 */
export declare const registerOidcClient: (delegatedAuthConfig: IDelegatedAuthConfig & ValidatedIssuerConfig, clientName: string, baseUrl: string) => Promise<string>;
//# sourceMappingURL=register.d.ts.map