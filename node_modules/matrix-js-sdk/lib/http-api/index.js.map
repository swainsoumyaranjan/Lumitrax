{"version":3,"file":"index.js","names":["_fetch","require","_prefix","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_utils","callbacks","_interopRequireWildcard","_method","_errors","_utils2","_interface","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","n","__proto__","a","getOwnPropertyDescriptor","u","i","set","MatrixHttpApi","FetchHttpApi","constructor","args","_defineProperty2","uploadContent","file","opts","_opts$includeFilename","_opts$abortController","_opts$type","_opts$name","includeFilename","abortController","AbortController","contentType","type","fileName","name","upload","loaded","total","deferred","defer","global","XMLHttpRequest","xhr","timeoutFn","abort","reject","Error","timeoutTimer","setTimeout","onreadystatechange","readyState","DONE","clearTimeout","status","DOMException","statusText","responseText","parseErrorResponse","resolve","JSON","parse","err","ConnectionError","onprogress","ev","_opts$progressHandler","progressHandler","url","getUrl","undefined","MediaPrefix","V3","searchParams","encodeURIComponent","useAuthorizationHeader","accessToken","open","Method","Post","href","setRequestHeader","send","signal","addEventListener","queryParams","filename","headers","authedRequest","prefix","abortSignal","then","response","onlyData","json","promise","finally","removeElement","uploads","elem","push","cancelUpload","find","getCurrentUploads","getContentUri","base","baseUrl","path","params","access_token"],"sources":["../../src/http-api/index.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { FetchHttpApi } from \"./fetch\";\nimport { FileType, IContentUri, IHttpOpts, Upload, UploadOpts, UploadResponse } from \"./interface\";\nimport { MediaPrefix } from \"./prefix\";\nimport { defer, QueryDict, removeElement } from \"../utils\";\nimport * as callbacks from \"../realtime-callbacks\";\nimport { Method } from \"./method\";\nimport { ConnectionError } from \"./errors\";\nimport { parseErrorResponse } from \"./utils\";\n\nexport * from \"./interface\";\nexport * from \"./prefix\";\nexport * from \"./errors\";\nexport * from \"./method\";\nexport * from \"./utils\";\n\nexport class MatrixHttpApi<O extends IHttpOpts> extends FetchHttpApi<O> {\n    private uploads: Upload[] = [];\n\n    /**\n     * Upload content to the homeserver\n     *\n     * @param file - The object to upload. On a browser, something that\n     *   can be sent to XMLHttpRequest.send (typically a File).  Under node.js,\n     *   a Buffer, String or ReadStream.\n     *\n     * @param opts - options object\n     *\n     * @returns Promise which resolves to response object, as\n     *    determined by this.opts.onlyData, opts.rawResponse, and\n     *    opts.onlyContentUri.  Rejects with an error (usually a MatrixError).\n     */\n    public uploadContent(file: FileType, opts: UploadOpts = {}): Promise<UploadResponse> {\n        const includeFilename = opts.includeFilename ?? true;\n        const abortController = opts.abortController ?? new AbortController();\n\n        // If the file doesn't have a mime type, use a default since the HS errors if we don't supply one.\n        const contentType = (opts.type ?? (file as File).type) || \"application/octet-stream\";\n        const fileName = opts.name ?? (file as File).name;\n\n        const upload = {\n            loaded: 0,\n            total: 0,\n            abortController,\n        } as Upload;\n        const deferred = defer<UploadResponse>();\n\n        if (global.XMLHttpRequest) {\n            const xhr = new global.XMLHttpRequest();\n\n            const timeoutFn = function (): void {\n                xhr.abort();\n                deferred.reject(new Error(\"Timeout\"));\n            };\n\n            // set an initial timeout of 30s; we'll advance it each time we get a progress notification\n            let timeoutTimer = callbacks.setTimeout(timeoutFn, 30000);\n\n            xhr.onreadystatechange = function (): void {\n                switch (xhr.readyState) {\n                    case global.XMLHttpRequest.DONE:\n                        callbacks.clearTimeout(timeoutTimer);\n                        try {\n                            if (xhr.status === 0) {\n                                throw new DOMException(xhr.statusText, \"AbortError\"); // mimic fetch API\n                            }\n                            if (!xhr.responseText) {\n                                throw new Error(\"No response body.\");\n                            }\n\n                            if (xhr.status >= 400) {\n                                deferred.reject(parseErrorResponse(xhr, xhr.responseText));\n                            } else {\n                                deferred.resolve(JSON.parse(xhr.responseText));\n                            }\n                        } catch (err) {\n                            if ((<Error>err).name === \"AbortError\") {\n                                deferred.reject(err);\n                                return;\n                            }\n                            deferred.reject(new ConnectionError(\"request failed\", <Error>err));\n                        }\n                        break;\n                }\n            };\n\n            xhr.upload.onprogress = (ev: ProgressEvent): void => {\n                callbacks.clearTimeout(timeoutTimer);\n                upload.loaded = ev.loaded;\n                upload.total = ev.total;\n                timeoutTimer = callbacks.setTimeout(timeoutFn, 30000);\n                opts.progressHandler?.({\n                    loaded: ev.loaded,\n                    total: ev.total,\n                });\n            };\n\n            const url = this.getUrl(\"/upload\", undefined, MediaPrefix.V3);\n\n            if (includeFilename && fileName) {\n                url.searchParams.set(\"filename\", encodeURIComponent(fileName));\n            }\n\n            if (!this.opts.useAuthorizationHeader && this.opts.accessToken) {\n                url.searchParams.set(\"access_token\", encodeURIComponent(this.opts.accessToken));\n            }\n\n            xhr.open(Method.Post, url.href);\n            if (this.opts.useAuthorizationHeader && this.opts.accessToken) {\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.opts.accessToken);\n            }\n            xhr.setRequestHeader(\"Content-Type\", contentType);\n            xhr.send(file);\n\n            abortController.signal.addEventListener(\"abort\", () => {\n                xhr.abort();\n            });\n        } else {\n            const queryParams: QueryDict = {};\n            if (includeFilename && fileName) {\n                queryParams.filename = fileName;\n            }\n\n            const headers: Record<string, string> = { \"Content-Type\": contentType };\n\n            this.authedRequest<UploadResponse>(Method.Post, \"/upload\", queryParams, file, {\n                prefix: MediaPrefix.V3,\n                headers,\n                abortSignal: abortController.signal,\n            })\n                .then((response) => {\n                    return this.opts.onlyData ? <UploadResponse>response : response.json();\n                })\n                .then(deferred.resolve, deferred.reject);\n        }\n\n        // remove the upload from the list on completion\n        upload.promise = deferred.promise.finally(() => {\n            removeElement(this.uploads, (elem) => elem === upload);\n        });\n        abortController.signal.addEventListener(\"abort\", () => {\n            removeElement(this.uploads, (elem) => elem === upload);\n            deferred.reject(new DOMException(\"Aborted\", \"AbortError\"));\n        });\n        this.uploads.push(upload);\n        return upload.promise;\n    }\n\n    public cancelUpload(promise: Promise<UploadResponse>): boolean {\n        const upload = this.uploads.find((u) => u.promise === promise);\n        if (upload) {\n            upload.abortController.abort();\n            return true;\n        }\n        return false;\n    }\n\n    public getCurrentUploads(): Upload[] {\n        return this.uploads;\n    }\n\n    /**\n     * Get the content repository url with query parameters.\n     * @returns An object with a 'base', 'path' and 'params' for base URL,\n     *          path and query parameters respectively.\n     */\n    public getContentUri(): IContentUri {\n        return {\n            base: this.opts.baseUrl,\n            path: MediaPrefix.V3 + \"/upload\",\n            params: {\n                access_token: this.opts.accessToken!,\n            },\n        };\n    }\n}\n"],"mappings":"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"}